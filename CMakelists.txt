cmake_minimum_required (VERSION 3.8)

project (project)
find_package(GTest)

add_executable (sea_battle
	main.cpp  
    Game/src/Game.cpp
    Game/src/Player.cpp
    Game/src/Ship.cpp
    Game/src/Menu.cpp
)

add_executable (test_Game
    test/testGame.cpp
    Game/src/Ship.cpp
    Game/src/Player.cpp
)

target_include_directories(
    sea_battle 
    PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/Game/headers
    )

target_include_directories(
    test_Game PRIVATE
    ${CMAKE_CURRENT_SOURCE_DIR}/Game/headers
)

target_include_directories(
    test_Game PRIVATE
    ${CMAKE_CURRENT_SOURCE_DIR}/test
)

target_include_directories(
    test_Game PRIVATE
    ${GTEST_INCLUDE_DIRS}
)

target_link_libraries(
    test_Game PRIVATE
    ${GTEST_BOTH_LIBRARIES}
)

set_target_properties (sea_battle PROPERTIES
	CXX_STANDARD 17
	CXX_STANDARD_REQUIRED ON
)
set_target_properties (test_Game PROPERTIES
	CXX_STANDARD 17
	CXX_STANDARD_REQUIRED ON
)

if (CMAKE_CXX_COMPILER_ID MATCHES "Clang" OR
    CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
    target_compile_options(sea_battle PRIVATE 
        -g
        -Wall
        -Wextra
        -Werror
        -pedantic
    )
    target_compile_options(test_Game PRIVATE 
        -g
        -Wall
        -Wextra
        -Werror
        -pedantic
    )
elseif (CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
    target_compile_options(sea_battle PRIVATE
        /EHsc
        /W4
        /WX
    )
    target_compile_options(test_Game PRIVATE
        /EHsc
        /W4
        /WX
    )
endif()